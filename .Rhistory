boxWidth = 0.5
# background dividers
bDivs <- c(0,7,8,9,11,14,par("usr")[3])
rect(xleft=par("usr")[1], xright=par("usr")[2],
ybottom=bDivs[-length(bDivs)]+0.5, ytop=bDivs[-1]+0.5,
col=c("grey90","white"), border=NA)
text(y=bDivs[-length(bDivs)]+0.9,
x=c(rep(relative.axis.point(0.96, "x"),3),
rep(relative.axis.point(0.96, "x"),2)),
labels=rev(c("(6) Post-novel diversity",
"(5) Novel diversity",
"(4) Climate",
"(3) Novelty magnitude",
"(2) Time decay",
"(1) Covariates")),
adj=1, font=2, col="grey70")
# text(y=bDivs[3]+0.75,
#      x=relative.axis.point(0.95, "x"),
#      labels=c("Novelty"),
#      adj=0, font=2, col="grey70")
segments(x0=0, x1=0, y0=par("usr")[3], y1=relative.axis.point(0.95,"y"),
lty="31")
axis(side=1, mgp=c(3,0.1,0))
greyMean <- apply(dMrands, 1, mean)
greyMean <- unitScale(greyMean)
sapply(1:nrow(dMrands), function(n){
print(n)
rect(xleft=quantile(dMrands[n,], prob=0.025),
xright=quantile(dMrands[n,], prob=0.975),
ybottom=n - 0.5 * boxWidth - offset,
ytop = n  + 0.5 * boxWidth - offset,
col=rgb(turnRamp(greyMean[n])/255))
})
segments(y0=1:nrow(obsCoef) - offset, y1=1:nrow(obsCoef) - offset,
x0=obsCoef[,1] + 1.96 * obsCoef[,2],
x1=obsCoef[,1] - 1.96 * obsCoef[,2])
obszero <- obsCoef[,1] - 1.96 * obsCoef[,2] < 0 &
obsCoef[,1] + 1.96 * obsCoef[,2] > 0
points(x=obsCoef[,1],
y=1:nrow(obsCoef) - offset,
pch=21, bg=ifelse(!obszero, "black", "white"))
axis(side=2, at=1:nrow(obsCoef), hadj=1, padj=0.5,
labels=plotLabels, las=1)
text(x=relative.axis.point(0.015, "x"),
y=relative.axis.point(0.97, "y"),
labels=expression(bold("(A)")*" Turnover"), adj=0)
box()
close.screen(1)
screen(2)
par(mar=c(0,0,0,0), ps=10, tcl=-0.25, mgp=c(3,0.5,0))
plot(x=NULL, y=NULL, xlim=c(-0.03,0.03), ylim=rev(c(0.25, length(plot.order))), yaxt="n", xlab="",
ylab="", xaxt="n")
# background dividers
rect(xleft=par("usr")[1], xright=par("usr")[2],
ybottom=bDivs[-length(bDivs)]+0.5, ytop=bDivs[-1]+0.5,
col=c("grey90","white"), border=NA)
segments(x0=0, x1=0, y0=par("usr")[3], y1=relative.axis.point(0.95,"y"),
lty="31")
axis(side=1, mgp=c(3,0.1,0))
dRrands <- randRcoef[,1,]
obsCoef <- dRcoef
# rearrange to right order
obsCoef <- obsCoef[match(plot.order, rownames(obsCoef)),]
dRrands <- dRrands[match(plot.order, rownames(dRrands)),]
obszero <- obsCoef[,1] - 1.96 * obsCoef[,2] < 0 &
obsCoef[,1] + 1.96 * obsCoef[,2] > 0
greyMean <- apply(dRrands, 1, mean)
colLims <- 0.015
greyMean <- (greyMean - -colLims) / (colLims - -colLims)
summary(greyMean)
sapply(1:nrow(dRrands), function(n){
rect(xleft=quantile(dRrands[n,], prob=0.025),
xright=quantile(dRrands[n,], prob=0.975),
ybottom=n - 0.5 * boxWidth - offset,
ytop = n  + 0.5 * boxWidth - offset,
col=rgb(persRamp(greyMean[n])/255))
})
segments(y0=1:nrow(obsCoef) + offset, y1=1:nrow(obsCoef) + offset,
x0=obsCoef[,1] + 1.96 * obsCoef[,2],
x1=obsCoef[,1] - 1.96 * obsCoef[,2])
points(x=obsCoef[,1],
y=1:nrow(obsCoef) + offset,
pch=21, bg=ifelse(!obszero, "black", "white"))
axis(side=2, at=1:nrow(obsCoef),
labels=NA,
las=1)
mtext(side=1, line=1, text="Standardized effect size",
at=par("usr")[1])
box()
text(x=relative.axis.point(0.015, "x"),
y=relative.axis.point(0.97, "y"),
labels=expression(bold("(B)")*" Persistence"), adj=0)
close.screen(2)
# segments(x0=c(0.4,0.4), x1=c(0.6,0.6), y0=c(0.5,0.6), y1=c(0.5,0.6))
# points(y=c(0.5,0.6), x=c(0.5,0.5), pch=21, bg=c("white", "black"))
# text(x=0.6, y=c(0.5,0.6), labels=c("Non sig.", "Significant"), pos=4, offset=0.25)
# rect(xleft=0.4, xright=0.6, ybottom=0.365, ytop=0.435)
# par(lheight=0.85)
# text(x=0.6, y=0.4-0.01, labels="95% quantile of\nnull expectations", pos=4, offset=0.25)
close.screen(all.screens=TRUE)
dev.off()
#           coef plot ####
plot.order <- rownames(dMcoef)[-1]
plotLabels = plot.order
plot.order <- c("bin.lagS",
"tsPropS",
"tslengthS",
"gammaS",
"gaPropS",
"novAbundPropS",
"novAbundPropAbsS",
"time.since.novelS",
"min.pS",
"globalLag20S", "localLag15S",
"novelH1LS", "deltaH1S", "novelH1LS:deltaH1S",
"deltaPostS", "novelH1LS:deltaPostS", "deltaH1S:deltaPostS")
plotLabels <- c("Time lag",
"Time series position",
"Time series length",
"Gamma diversity",
"Gamma proportion",
"Pollen variation",
"Abs pollen variation",
"Time since novelty",
"Novelty magnitude",
expression(Delta*"Global temp"),
expression(Delta*"Regional temp"),
"Novel state H1 (N)",
expression("Novel "*Delta*"H1 ("*Delta*"N)"),
expression(underline("N:"*Delta*"N")),
expression("Post-novel "*Delta*"H1 ("*Delta*"pN)"),
expression(underline("N':"*Delta*"N")),
expression(underline(Delta*"N:"*Delta*"pN")))
pdf(date.wrap("./plots/predCoefPlot", ".pdf"), height=5.5, width=8.5, useDingbats=FALSE,
bg="white")
xlims <- c(-0.2,0.4)
offset <- 0
split.screen(rbind(c(0.25,0.62,0.09,0.99),
c(0.62,0.99,0.09,0.99)))
screen(1)
par(mar=c(0,0,0,0), ps=10, tcl=-0.25, mgp=c(3,0.5,0))
plot(x=NULL, y=NULL, xlim=c(-0.12,0.135), ylim=rev(c(0.25, length(plot.order))), yaxt="n", xlab="",
ylab="", xaxt="n")
# dM rand coefs
dMrands <- randMcoef[,1,]
obsCoef <- dMcoef
rownames(obsCoef) = gsub('abs', "", rownames(obsCoef))
rownames(dMrands) = gsub('abs', "", rownames(dMrands))
# rearrange to right order
obsCoef <- obsCoef[match(plot.order, rownames(obsCoef)),]
dMrands <- dMrands[match(plot.order, rownames(dMrands)),]
boxWidth = 0.5
# background dividers
bDivs <- c(0,7,8,9,11,14,par("usr")[3])
rect(xleft=par("usr")[1], xright=par("usr")[2],
ybottom=bDivs[-length(bDivs)]+0.5, ytop=bDivs[-1]+0.5,
col=c("grey90","white"), border=NA)
text(y=bDivs[-length(bDivs)]+0.9,
x=c(rep(relative.axis.point(0.96, "x"),3),
rep(relative.axis.point(0.96, "x"),2)),
labels=rev(c("(6) Post-novel diversity",
"(5) Novel diversity",
"(4) Climate",
"(3) Novelty magnitude",
"(2) Time decay",
"(1) Covariates")),
adj=1, font=2, col="grey70")
# text(y=bDivs[3]+0.75,
#      x=relative.axis.point(0.95, "x"),
#      labels=c("Novelty"),
#      adj=0, font=2, col="grey70")
segments(x0=0, x1=0, y0=par("usr")[3], y1=relative.axis.point(0.95,"y"),
lty="31")
axis(side=1, mgp=c(3,0.1,0))
greyMean <- apply(dMrands, 1, mean)
greyMean <- unitScale(greyMean)
sapply(1:nrow(dMrands), function(n){
print(n)
rect(xleft=quantile(dMrands[n,], prob=0.025),
xright=quantile(dMrands[n,], prob=0.975),
ybottom=n - 0.5 * boxWidth - offset,
ytop = n  + 0.5 * boxWidth - offset,
col=rgb(turnRamp(greyMean[n])/255))
})
segments(y0=1:nrow(obsCoef) - offset, y1=1:nrow(obsCoef) - offset,
x0=obsCoef[,1] + 1.96 * obsCoef[,2],
x1=obsCoef[,1] - 1.96 * obsCoef[,2])
obszero <- obsCoef[,1] - 1.96 * obsCoef[,2] < 0 &
obsCoef[,1] + 1.96 * obsCoef[,2] > 0
points(x=obsCoef[,1],
y=1:nrow(obsCoef) - offset,
pch=21, bg=ifelse(!obszero, "black", "white"))
axis(side=2, at=1:nrow(obsCoef), hadj=1, padj=0.5,
labels=plotLabels, las=1)
text(x=relative.axis.point(0.015, "x"),
y=relative.axis.point(0.97, "y"),
labels=expression(bold("(A)")*" Turnover"), adj=0)
box()
close.screen(1)
screen(2)
par(mar=c(0,0,0,0), ps=10, tcl=-0.25, mgp=c(3,0.5,0))
plot(x=NULL, y=NULL, xlim=c(-0.03,0.03), ylim=rev(c(0.25, length(plot.order))), yaxt="n", xlab="",
ylab="", xaxt="n")
# background dividers
rect(xleft=par("usr")[1], xright=par("usr")[2],
ybottom=bDivs[-length(bDivs)]+0.5, ytop=bDivs[-1]+0.5,
col=c("grey90","white"), border=NA)
segments(x0=0, x1=0, y0=par("usr")[3], y1=relative.axis.point(0.95,"y"),
lty="31")
axis(side=1, mgp=c(3,0.1,0))
dRrands <- randRcoef[,1,]
obsCoef <- dRcoef
# rearrange to right order
obsCoef <- obsCoef[match(plot.order, rownames(obsCoef)),]
dRrands <- dRrands[match(plot.order, rownames(dRrands)),]
obszero <- obsCoef[,1] - 1.96 * obsCoef[,2] < 0 &
obsCoef[,1] + 1.96 * obsCoef[,2] > 0
greyMean <- apply(dRrands, 1, mean)
colLims <- 0.015
greyMean <- (greyMean - -colLims) / (colLims - -colLims)
summary(greyMean)
sapply(1:nrow(dRrands), function(n){
rect(xleft=quantile(dRrands[n,], prob=0.025),
xright=quantile(dRrands[n,], prob=0.975),
ybottom=n - 0.5 * boxWidth - offset,
ytop = n  + 0.5 * boxWidth - offset,
col=rgb(persRamp(greyMean[n])/255))
})
segments(y0=1:nrow(obsCoef) + offset, y1=1:nrow(obsCoef) + offset,
x0=obsCoef[,1] + 1.96 * obsCoef[,2],
x1=obsCoef[,1] - 1.96 * obsCoef[,2])
points(x=obsCoef[,1],
y=1:nrow(obsCoef) + offset,
pch=21, bg=ifelse(!obszero, "black", "white"))
axis(side=2, at=1:nrow(obsCoef),
labels=NA,
las=1)
mtext(side=1, line=1, text="Standardized effect size",
at=par("usr")[1])
box()
text(x=relative.axis.point(0.015, "x"),
y=relative.axis.point(0.97, "y"),
labels=expression(bold("(B)")*" Persistence"), adj=0)
close.screen(2)
# segments(x0=c(0.4,0.4), x1=c(0.6,0.6), y0=c(0.5,0.6), y1=c(0.5,0.6))
# points(y=c(0.5,0.6), x=c(0.5,0.5), pch=21, bg=c("white", "black"))
# text(x=0.6, y=c(0.5,0.6), labels=c("Non sig.", "Significant"), pos=4, offset=0.25)
# rect(xleft=0.4, xright=0.6, ybottom=0.365, ytop=0.435)
# par(lheight=0.85)
# text(x=0.6, y=0.4-0.01, labels="95% quantile of\nnull expectations", pos=4, offset=0.25)
close.screen(all.screens=TRUE)
dev.off()
#           interaction figure ####
pdf(date.wrap("./plots/post-novel interactions 3way", ".pdf"), height=3.35, width=8, bg="white")
par(mar=c(0,0,0,0), ps=8, mgp=c(3,0.5,0), tcl=-0.25, las=1)
ratScale <- c(-0.12, 0.18)
split.screen(rbind(c(0.1,0.35,0.35,0.95), # persistence N:dN
c(0.4,0.65,0.35,0.95), # persistence N:dpN
c(0.7,0.95,0.35,0.95), # persistence dN:dpN
c(0.6,0.9,0.12,0.16), # persistence legend
c(0.1,0.5,0.075,0.2))) # time series legend
# novel observed distributions
screen(1)
par(mar=c(0,0,0,0), ps=8, mgp=c(3,0.5,0), tcl=-0.25, las=1)
richMat <- interaction.matrix.fun(dRdivDirDir, x.var="novelH1LS", y.var="deltaH1S", grid.size=100, quantile=0.025)
image(richMat, col=colorRampPalette(c("purple","white","orange"))(100), useRaster=TRUE,
axes=FALSE, zlim=ratScale)
points(post200$novelH1LS ~ post200$deltaH1S, cex=0.2, pch=16, col="grey50")
contour(richMat, add=TRUE)
box()
richScale <- scaleDf[1:2,]
# delta axis
axis(side=2, at=(pretty(seq(-15,15,1),15)-richScale[2,1]) / richScale[2,2],
labels=pretty(seq(-15,15,1),15))
mtext(side=2, line=1.1, text = expression(Delta*"Diversity (pre-novel"%->%"novel)"),
las=0)
# raw axis
rich <- seq(2,15,2)
axis(side=1, at=(rich-richScale[1,1]) / richScale[1,2],
labels=rich, mgp=c(3,0.1,0))
axis(side=1, at=(1:30-richScale[1,1]) / richScale[1,2],
labels=NA, tcl=-0.125)
mtext(side=1, line=0.75, text="Novel state diversity")
mtext(at=relative.axis.point(0, "x"), side=3, text=expression(bold("(A)")), adj=0)
close.screen(1)
screen(2)
par(mar=c(0,0,0,0), ps=8, mgp=c(3,0.5,0), tcl=-0.25, las=1)
richMat1 <- interaction.matrix.fun(dRdivDirDir, x.var="novelH1LS", y.var="deltaPostS", grid.size=100, quantile=0.025)
image(richMat1, col=colorRampPalette(c("purple","white","orange"))(100), useRaster=TRUE,
axes=FALSE, zlim=ratScale)
points(post200$novelH1LS ~ post200$deltaPostS, cex=0.2, pch=16, col="grey50")
contour(richMat1, add=TRUE)
box()
richScale <- scaleDf[c(1,3),]
# delta axis
axis(side=2, at=(pretty(seq(-15,15,1),15)-richScale[2,1]) / richScale[2,2],
labels=pretty(seq(-15,15,1),15))
mtext(side=2, line=1.1, text = expression(Delta*"Diversity (novel"%->%"post-novel)"),las=0)
# raw axis
rich <- seq(2,15,2)
axis(side=1, at=(rich-richScale[1,1]) / richScale[1,2],
labels=rich, mgp=c(3,0.1,0))
axis(side=1, at=(1:30-richScale[1,1]) / richScale[1,2],
labels=NA, tcl=-0.125)
mtext(side=1, line=0.75, text="Novel state diversity")
mtext(at=relative.axis.point(0, "x"), side=3, text=expression(bold("(B)")), adj=0)
close.screen(2)
screen(3)
richMat2 <- interaction.matrix.fun(dRdivDirDir, x.var="deltaH1S", y.var="deltaPostS", grid.size=100, quantile=0.025)
image(richMat2, col=colorRampPalette(c("purple","white","orange"))(100), useRaster=TRUE,
axes=FALSE, zlim=ratScale)
points(post200$deltaH1S ~ post200$deltaPostS, cex=0.2, pch=16, col="grey50")
contour(richMat2, add=TRUE)
box()
richScale <- scaleDf[2:3,]
# delta axis
axis(side=1, at=(pretty(seq(-15,15,1),15)-richScale[1,1]) / richScale[1,2],
labels=pretty(seq(-15,15,1),15), mgp=c(3,0.1,0))
mtext(side=1, line=0.75, text= expression(Delta*"Diversity (pre-novel"%->%"novel)"))
# raw axis
axis(side=2, at=(pretty(seq(-15,15,1),15)-richScale[2,1]) / richScale[2,2],
labels=pretty(seq(-15,15,1),15))
mtext(side=2, line=1.1, text= expression(Delta*"Diversity (novel"%->%"post-novel)"),las=0)
mtext(at=relative.axis.point(0, "x"), side=3, text=expression(bold("(C)")), adj=0)
close.screen(3)
screen(4)
image(y=c(0,1),
x=seq(min(ratScale), max(ratScale), len=200),
z=matrix(1:200, ncol=1),
col=colorRampPalette(c("purple","white","orange"))(200),
useRaster=TRUE, axes=FALSE, xlab="", ylab="")
axis(side=1, mgp=c(3,0,0))
mtext(side=1, text="Persistence", las=0, line=0.75)
box()
close.screen(4)
screen(5)
par(mar=c(0,0,0,0), ps=8, mgp=c(3,0.5,0), tcl=-0.25, las=1)
plot(NULL, xlim=c(0.25,0.75), ylim=c(0.2,0.8), axes=FALSE, xlab="", ylab="")
par(xpd=NA)
pointLocs = relative.axis.point(seq(0.15,0.85,len=3), "x")
Arrows(x0=c(relative.axis.point(0, "x"), pointLocs) + 0.03,
x1=c(pointLocs, relative.axis.point(1, "x")) - 0.03,
y0=0.5, y1=0.5, arr.type="triangle", arr.length = 0.15, arr.width=0.15)
points(x=pointLocs, y=rep(0.5,3),
pch=c(24,21,21), bg=c("purple", "orange", "white"), cex=3)
segments(x0=pointLocs[2], x1=pointLocs[2], y0=0.6, y1=0.65)
text(x=pointLocs[2], y=0.65, pos=3, labels="Novel state diversity",offset=0.25)
segments(x0=pointLocs[c(1,3)], x1=pointLocs[c(1,3)], y0=0.4, y1=0.35)
segments(x0=pointLocs[2] + c(-0.01, 0.01), x1=pointLocs[2] + c(-0.01, 0.01), y0=0.4, y1=0.35)
segments(x0=pointLocs[c(1,3)], x1=pointLocs[2] + c(-0.01, 0.01), y0=0.35, y1=0.35)
text(x=mean(c(pointLocs[1], pointLocs[2] - 0.01)),
y=0.35, pos=1, adj=0.5, labels="Pre-novel to novel\ndiversity change")
text(x=mean(c(pointLocs[3], pointLocs[2] - 0.01)),
y=0.35, pos=1, adj=0.5, labels="Novel to post-novel\ndiversity change")
par(xpd=FALSE)
close.screen(5)
close.screen(all.screens=TRUE)
dev.off()
#           combo plot ####
library(viridisLite)
# dM rand coefs
pdf("./plots/turnPersEffects.pdf", height=5, width=10, useDingbats = FALSE)
par(mfrow=c(1,2), mar=c(3,3.5,1,0.5), ps=10, tcl=-0.25, mgp=c(3,0.5,0), las=1)
dMrands <- randMcoef[,1,][-(1:8),]
obsCoef <- dMcoef[-(1:8),]
coefCats = c(3,2,2,1,3,3,3,1,1,2)
plotLim = 0.135
plot(NULL, xlim=c(-0.05,0.15), ylim=c(-0.09,0.075),
xlab="", ylab="", xaxt="n")
axis(side=1, mgp=c(3,0.1,0))
abline(h=0, col="grey")
abline(v=0,col="grey")
abline(a=0,b=1, lty="31")
text(x=relative.axis.point(0.165, "x"), y=0, col="grey", adj=0, pos=3, offset=0.25,
labels="No post-novel effect")
text(y=relative.axis.point(0.975, "y"), x=0, col="grey", adj=0, pos=2, offset=0.25,
labels="No null effect", srt=90)
text(x=relative.axis.point(0.125, "x"), y=relative.axis.point(0.125, "y"), col="black", adj=0, pos=3, offset=0.25,
labels="Post-novel = Null", srt=45)
segments(x0 = rowMeans(dMrands), x1=rowMeans(dMrands),
y0 = obsCoef[,1] + 1.96 * obsCoef[,2],
y1 = obsCoef[,1] - 1.96 * obsCoef[,2], lwd=2,
col=c("grey80","black","red")[coefCats])
segments(x0 = apply(dMrands, 1, quantile, probs=0.025), x1 = apply(dMrands, 1, quantile, probs=0.975),
y0 = obsCoef[,1], y1 = obsCoef[,1], lwd=2,
col=c("grey80","black","red")[coefCats])
points(obsCoef[,1] ~ rowMeans(dMrands),
pch=16, col=c("grey80","black","red")[coefCats])
text(obsCoef[,1] ~ rowMeans(dMrands), labels=rownames(dMrands), pos=4,
col=c("grey80","black","red")[coefCats])
mtext(side=1, line=1.25, text="Effect on turnover (non-novel null expectations)")
mtext(side=2, line=2.5, text="Effect on turnover (novel)", las=0)
text(x=relative.axis.point(0.02, "x"),
y=relative.axis.point(0.95, "y"),
adj=0, labels=expression(bold("(A) ")*"Turnover"))
# dM rand coefs
dMrands <- randRcoef[,1,][-(1:8),]
obsCoef <- dRcoef[-(1:8),]
coefCats = c(3,2,3,1,2,2,3,2,3,3)
plotLim = 0.05
plot(NULL, xlim=c(-0.008,0.018), ylim=c(-0.02,0.025),
xlab="", ylab="", xaxt="n")
axis(side=1, mgp=c(3,0.1,0))
abline(h=0, col="grey")
abline(v=0,col="grey")
abline(a=0,b=1, lty="31")
text(x=relative.axis.point(0.165, "x"), y=0, col="grey", adj=0, pos=3, offset=0.25,
labels="No post-novel effect")
text(y=relative.axis.point(0.975, "y"), x=0, col="grey", adj=0, pos=2, offset=0.25,
labels="No null effect", srt=90)
text(x=relative.axis.point(0.865, "x"), y=relative.axis.point(0.565, "y"), col="black", adj=1, pos=3, offset=0.25,
labels="Post-novel = Null", srt=18)
segments(x0 = rowMeans(dMrands), x1=rowMeans(dMrands),
y0 = obsCoef[,1] + 1.96 * obsCoef[,2],
y1 = obsCoef[,1] - 1.96 * obsCoef[,2], lwd=2,
col=c("grey80","black","red")[coefCats])
segments(x0 = apply(dMrands, 1, quantile, probs=0.025), x1 = apply(dMrands, 1, quantile, probs=0.975),
y0 = obsCoef[,1], y1 = obsCoef[,1], lwd=2,
col=c("grey80","black","red")[coefCats])
points(obsCoef[,1] ~ rowMeans(dMrands),
pch=16, col=c("grey80","black","red")[coefCats])
text(obsCoef[,1] ~ rowMeans(dMrands), labels=rownames(dMrands), pos=4,
col=c("grey80","black","red")[coefCats])
mtext(side=1, line=1.25, text="Effect on persistence (non-novel null expectations)")
mtext(side=2, line=2.5, text="Effect on persistence (novel)", las=0)
legend(x = relative.axis.point(0.625, "x"),
y = relative.axis.point(0.15,"y"),
pch = 22, pt.bg=c("grey80", "black", "red"),
legend = c("No effect", "Post-novel = Null",
expression("Post-novel "!=" Null")),
bty="n", pt.cex=1.5, y.intersp=0.7, x.intersp=0.85)
text(x=relative.axis.point(0.02, "x"),
y=relative.axis.point(0.95, "y"),
adj=0, labels=expression(bold("(B) ")*"Persistence"))
dev.off()
#           combo plot (covariates) ####
library(viridisLite)
# dM rand coefs
pdf("./plots/turnPersEffectsCOVARIATES.pdf", height=5, width=10, useDingbats = FALSE)
par(mfrow=c(1,2), mar=c(3,3.5,1,0.5), ps=10, tcl=-0.25, mgp=c(3,0.5,0), las=1)
dMrands <- randMcoef[,1,][(2:8),]
obsCoef <- dMcoef[(2:8),]
coefCats = c(3,1,3,3,2,3,1)
plotLim = 0.135
plot(NULL, xlim=c(-0.1,0.1), ylim=c(-0.08,0.1),
xlab="", ylab="", xaxt="n")
axis(side=1, mgp=c(3,0.1,0))
abline(h=0, col="grey")
abline(v=0,col="grey")
abline(a=0,b=1, lty="31")
text(x=relative.axis.point(0.165, "x"), y=0, col="grey", adj=0, pos=3, offset=0.25,
labels="No post-novel effect")
text(y=relative.axis.point(0.975, "y"), x=0, col="grey", adj=0, pos=2, offset=0.25,
labels="No null effect", srt=90)
text(x=relative.axis.point(0.125, "x"), y=relative.axis.point(0.125, "y"), col="black", adj=0, pos=3, offset=0.25,
labels="Post-novel = Null", srt=45)
segments(x0 = rowMeans(dMrands), x1=rowMeans(dMrands),
y0 = obsCoef[,1] + 1.96 * obsCoef[,2],
y1 = obsCoef[,1] - 1.96 * obsCoef[,2], lwd=2,
col=c("grey80","black","red")[coefCats])
segments(x0 = apply(dMrands, 1, quantile, probs=0.025), x1 = apply(dMrands, 1, quantile, probs=0.975),
y0 = obsCoef[,1], y1 = obsCoef[,1], lwd=2,
col=c("grey80","black","red")[coefCats])
points(obsCoef[,1] ~ rowMeans(dMrands),
pch=16, col=c("grey80","black","red")[coefCats])
text(obsCoef[,1] ~ rowMeans(dMrands), labels=rownames(dMrands), pos=4,
col=c("grey80","black","red")[coefCats])
mtext(side=1, line=1.25, text="Effect on turnover (non-novel null expectations)")
mtext(side=2, line=2.5, text="Effect on turnover (novel)", las=0)
text(x=relative.axis.point(0.02, "x"),
y=relative.axis.point(0.95, "y"),
adj=0, labels=expression(bold("(A) ")*"Turnover"))
# dM rand coefs
dMrands <- randRcoef[,1,][(2:8),]
obsCoef <- dRcoef[(2:8),]
coefCats = c(3,1,1,3,1,2,1)
plotLim = 0.05
plot(NULL, xlim=c(-0.005,0.008), ylim=c(-0.013,0.03),
xlab="", ylab="", xaxt="n")
axis(side=1, mgp=c(3,0.1,0))
abline(h=0, col="grey")
abline(v=0,col="grey")
abline(a=0,b=1, lty="31")
text(x=relative.axis.point(0.165, "x"), y=0, col="grey", adj=0, pos=3, offset=0.25,
labels="No post-novel effect")
text(y=relative.axis.point(0.975, "y"), x=0, col="grey", adj=0, pos=2, offset=0.25,
labels="No null effect", srt=90)
text(x=relative.axis.point(0.865, "x"), y=relative.axis.point(0.565, "y"), col="black", adj=1, pos=3, offset=0.25,
labels="Post-novel = Null", srt=18)
segments(x0 = rowMeans(dMrands), x1=rowMeans(dMrands),
y0 = obsCoef[,1] + 1.96 * obsCoef[,2],
y1 = obsCoef[,1] - 1.96 * obsCoef[,2], lwd=2,
col=c("grey80","black","red")[coefCats])
segments(x0 = apply(dMrands, 1, quantile, probs=0.025), x1 = apply(dMrands, 1, quantile, probs=0.975),
y0 = obsCoef[,1], y1 = obsCoef[,1], lwd=2,
col=c("grey80","black","red")[coefCats])
points(obsCoef[,1] ~ rowMeans(dMrands),
pch=16, col=c("grey80","black","red")[coefCats])
text(obsCoef[,1] ~ rowMeans(dMrands), labels=rownames(dMrands), pos=4,
col=c("grey80","black","red")[coefCats])
mtext(side=1, line=1.25, text="Effect on persistence (non-novel null expectations)")
mtext(side=2, line=2.5, text="Effect on persistence (novel)", las=0)
legend(x = relative.axis.point(0.625, "x"),
y = relative.axis.point(0.15,"y"),
pch = 22, pt.bg=c("grey80", "black", "red"),
legend = c("No effect", "Post-novel = Null",
expression("Post-novel "!=" Null")),
bty="n", pt.cex=1.5, y.intersp=0.7, x.intersp=0.85)
text(x=relative.axis.point(0.02, "x"),
y=relative.axis.point(0.95, "y"),
adj=0, labels=expression(bold("(B) ")*"Persistence"))
dev.off()
